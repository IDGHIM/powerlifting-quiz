import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import Button from '../components/Button.tsx';
import './CategoryPage.css'; 

const CategoryPage: React.FC = () => {
  // Hook pour naviguer entre les pages (react-router-dom)
  const navigate = useNavigate();

  // √âtat pour stocker la cat√©gorie s√©lectionn√©e (null au d√©part)
  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);

  // Fonction appel√©e quand une cat√©gorie est cliqu√©e, elle met √† jour la cat√©gorie s√©lectionn√©e
  const handleCategoryClick = (category: string) => {
    setSelectedCategory(category);
  };

  // Fonction appel√©e quand un mode de jeu est choisi
  // Elle v√©rifie qu'une cat√©gorie est s√©lectionn√©e, puis navigue vers la page quiz avec param√®tres dans l'URL
  const handleModeSelect = (mode: 'classic' | 'timer' | '2players') => {
    if (!selectedCategory) return; // Ne rien faire si aucune cat√©gorie n'est s√©lectionn√©e
    navigate(`/quiz?category=${selectedCategory}&mode=${mode}`);
  };

  return (
    <div className="category-page">
      <section className="category-section">
        {/* Titre principal */}
        <h1 className="category-title">Choisis une cat√©gorie</h1>

        {/* Boutons des cat√©gories */}
        <div className="category-buttons">
          <Button
            text="Culture Powerlifting"
            // Ajoute la classe "active" si la cat√©gorie est s√©lectionn√©e (style visuel)
            className={`category-button ${selectedCategory === 'culture' ? 'active' : ''}`}
            onClick={() => handleCategoryClick('culture')}
          />
          <Button
            text="R√®gles IPF"
            className={`category-button ${selectedCategory === 'reglement' ? 'active' : ''}`}
            onClick={() => handleCategoryClick('reglement')}
          />
          <Button
            text="Anatomie & Biom√©canique"
            className={`category-button ${selectedCategory === 'biomecanique' ? 'active' : ''}`}
            onClick={() => handleCategoryClick('biomecanique')}
          />
        </div>

        {/* Affiche les choix de mode uniquement si une cat√©gorie est s√©lectionn√©e */}
        {selectedCategory && (
          <>
            <h2 className="mode-title">Choisis un mode de jeu</h2>

            {/* Boutons des modes de jeu */}
            <div className="mode-buttons">
              <Button
                text="üéØ Classique"
                className="mode-button classic"
                onClick={() => handleModeSelect('classic')}
              />
              <Button
                text="‚è±Ô∏è Contre-la-montre"
                className="mode-button timer"
                onClick={() => handleModeSelect('timer')}
              />
              <Button
                text="üë• 2 Joueurs"
                className="mode-button two-players"
                onClick={() => handleModeSelect('2players')}
              />
            </div>
          </>
        )}
      </section>
    </div>
  );
};

export default CategoryPage;
